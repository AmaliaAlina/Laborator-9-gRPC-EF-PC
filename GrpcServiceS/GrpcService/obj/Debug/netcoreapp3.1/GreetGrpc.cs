// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcService {
  public static partial class PostComment
  {
    static readonly string __ServiceName = "greet.PostComment";

    static readonly grpc::Marshaller<global::GrpcService.PostRequest> __Marshaller_greet_PostRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.PostRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.PostResponse> __Marshaller_greet_PostResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.PostResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.PostsRespose> __Marshaller_greet_PostsRespose = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.PostsRespose.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcService.PostRequest, global::GrpcService.PostResponse> __Method_AddPost = new grpc::Method<global::GrpcService.PostRequest, global::GrpcService.PostResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddPost",
        __Marshaller_greet_PostRequest,
        __Marshaller_greet_PostResponse);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::GrpcService.PostsRespose> __Method_GetAllPosts = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::GrpcService.PostsRespose>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllPosts",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_greet_PostsRespose);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcService.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PostComment</summary>
    [grpc::BindServiceMethod(typeof(PostComment), "BindService")]
    public abstract partial class PostCommentBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.PostResponse> AddPost(global::GrpcService.PostRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcService.PostsRespose> GetAllPosts(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PostCommentBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddPost, serviceImpl.AddPost)
          .AddMethod(__Method_GetAllPosts, serviceImpl.GetAllPosts).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PostCommentBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddPost, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.PostRequest, global::GrpcService.PostResponse>(serviceImpl.AddPost));
      serviceBinder.AddMethod(__Method_GetAllPosts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::GrpcService.PostsRespose>(serviceImpl.GetAllPosts));
    }

  }
}
#endregion
